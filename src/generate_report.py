"""
Report generator module
Creates HTML reports from weather data
"""

import os
import json
from datetime import datetime
from jinja2 import Template

def main():
    """
    Main function to generate HTML report
    """
    print("Generating HTML report...")
    
    # Load weather data
    try:
        with open("data/weather_data.json", "r") as f:
            weather_data = json.load(f)
    except FileNotFoundError:
        weather_data = {
            "timestamp": datetime.now().isoformat(),
            "location": "Unknown",
            "temperature": 0,
            "conditions": "No data",
            "humidity": 0,
            "wind_speed": 0,
            "forecast": "No data available"
        }
    
    # Simple HTML template
    html_template = """
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Weather Daily Report</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
            }
            .container {
                background: rgba(255, 255, 255, 0.1);
                border-radius: 10px;
                padding: 30px;
                backdrop-filter: blur(10px);
            }
            h1 {
                text-align: center;
                margin-bottom: 30px;
            }
            .weather-info {
                display: grid;
                grid-template-columns: 1fr 1fr;
                gap: 20px;
                margin: 20px 0;
            }
            .info-item {
                background: rgba(255, 255, 255, 0.1);
                padding: 15px;
                border-radius: 5px;
            }
            .info-label {
                font-weight: bold;
                margin-bottom: 5px;
            }
            .footer {
                text-align: center;
                margin-top: 30px;
                font-size: 0.9em;
                opacity: 0.8;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üå§Ô∏è Weather Daily Report</h1>
            <div class="weather-info">
                <div class="info-item">
                    <div class="info-label">üìç Location</div>
                    <div>{{ location }}</div>
                </div>
                <div class="info-item">
                    <div class="info-label">üå°Ô∏è Temperature</div>
                    <div>{{ temperature }}¬∞F</div>
                </div>
                <div class="info-item">
                    <div class="info-label">‚òÅÔ∏è Conditions</div>
                    <div>{{ conditions }}</div>
                </div>
                <div class="info-item">
                    <div class="info-label">üíß Humidity</div>
                    <div>{{ humidity }}%</div>
                </div>
                <div class="info-item">
                    <div class="info-label">üí® Wind Speed</div>
                    <div>{{ wind_speed }} mph</div>
                </div>
                <div class="info-item">
                    <div class="info-label">üìÖ Forecast</div>
                    <div>{{ forecast }}</div>
                </div>
            </div>
            <div class="footer">
                Last updated: {{ timestamp }}<br>
                Generated by Weather Daily Report System
            </div>
        </div>
    </body>
    </html>
    """
    
    template = Template(html_template)
    html_content = template.render(**weather_data)
    
    # Save to both output and docs directories
    os.makedirs("output", exist_ok=True)
    os.makedirs("docs", exist_ok=True)
    
    with open("output/summary.html", "w") as f:
        f.write(html_content)
    
    with open("docs/summary.html", "w") as f:
        f.write(html_content)
    
    print("HTML report saved to output/summary.html and docs/summary.html")

if __name__ == "__main__":
    main()